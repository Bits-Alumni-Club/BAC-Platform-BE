# Generated by Django 3.2.9 on 2021-11-15 12:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='ContactNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=14, verbose_name='phone number')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('paragraph', models.TextField(verbose_name='paragraph')),
                ('page_type', models.PositiveSmallIntegerField(choices=[(1, 'home'), (2, 'wwa'), (3, 'mission'), (4, 'vision'), (5, 'team'), (6, 'contact'), (7, 'testimony'), (8, 'faq')], default=1, verbose_name='Page Type')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='SocialPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='name')),
                ('link', models.URLField(verbose_name='link')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='WhoWeAre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=500, verbose_name='heading')),
                ('image', models.ImageField(upload_to='media/core/', verbose_name='image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.page')),
            ],
            options={
                'verbose_name': 'Who We Are',
                'verbose_name_plural': 'Who We Are',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testimony', models.CharField(max_length=500, verbose_name='testimony')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.page')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testimonials', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'testimony',
                'verbose_name_plural': 'Testimonies',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=500, verbose_name='heading')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.page')),
                ('team', models.ManyToManyField(related_name='teams', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Home',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=500, verbose_name='heading')),
                ('image', models.ImageField(upload_to='media/core/', verbose_name='image')),
                ('display_time', models.DateTimeField(auto_now=True, verbose_name='display time')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.page')),
            ],
            options={
                'verbose_name': 'Home',
                'verbose_name_plural': 'Home',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200, verbose_name='question')),
                ('answer', models.TextField(verbose_name='answer')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.page')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=500, verbose_name='heading')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('email', models.ManyToManyField(related_name='contact_emails', to='core.ContactEmail')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.page')),
                ('phone_number', models.ManyToManyField(related_name='contact_numbers', to='core.ContactNumber')),
                ('platform', models.ManyToManyField(related_name='social_links', to='core.SocialPlatform')),
            ],
        ),
    ]
